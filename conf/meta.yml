---
long_name: "Michalcea's Algorithm"
short_name: "Mi"
description: "Michalcea's short text similarity algorithm uses WordNet to explore the distances between each possible word pair between sentences. Several different WordNet distance algorithms are used and their results normalized to range from 0 to 1 and then are averaged. The alignment between words is greedy matching. The inverse document frequency of the words based on the BNC is used to weight the importance of words during this calculation."
options:
  -
    long_name: "Jiang-Conrath"
    short_name: jcn
    description: "Jiang-Conrath Similarity Return a score denoting how similar two word senses are, based on the Information Content (IC) of the Least Common Subsumer (most specific ancestor node) and that of the two input Synsets. The relationship is given by the equation 1 / (IC(s1) + IC(s2) - 2 * IC(lcs))."
    default: y
    boolean:
      true_description: "Include Jiang & Conrath's algoroithm"
      false_description: "Do not include Jiang & Conrath's Algorithm"
  -
    long_name: "Resnik"
    short_name: res
    description: "Resnik Similarity: Return a score denoting how similar two word senses are, based on the Information Content (IC) of the Least Common Subsumer (most specific ancestor node). Note that for any similarity measure that uses information content, the result is dependent on the corpus used to generate the information content and the specifics of how the information content was created."
    default: y
    boolean:
      true_description: "Include Resnik's algorithm"
      false_description: "Exclude Resnik's algorithm"
  -
    long_name: "Lin"
    short_name: lin
    description: "Lin Similarity: Return a score denoting how similar two word senses are, based on the Information Content (IC) of the Least Common Subsumer (most specific ancestor node) and that of the two input Synsets. The relationship is given by the equation 2 * IC(lcs) / (IC(s1) + IC(s2))."
    default: y
    boolean:
      true_description: ""
      false_description: ""
  -
    long_name: "Wu-Palmer Similarity"
    short_name: wup
    description: "Return a score denoting how similar two word senses are, based on the depth of the two senses in the taxonomy and that of their Least Common Subsumer (most specific ancestor node)."
    default: y
    boolean:
      true_description: ""
      false_description: ""
  -
    long_name: "Leacock-Chodorow"
    short_name: lch
    description: "Return a score denoting how similar two word senses are, based on the shortest path that connects the senses (as above) and the maximum depth of the taxonomy in which the senses occur. The relationship is given as -log(p/2d) where p is the shortest path length and d the taxonomy depth."
    default: y
    boolean:
      true_description: ""
      false_description: ""
  -
    long_name: "Path similarity"
    short_name: path
    description: "Return a score denoting how similar two word senses are, based on the shortest path that connects the senses in the is-a (hypernym/hypnoym) taxonomy."
    default: n
    boolean:
      true_description: ""
      false_description: ""
